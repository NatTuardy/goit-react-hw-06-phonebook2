{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/rootReducer.js","redux/store.js","components/inputField/InputField.jsx","fields/fields.js","components/contactForm/ContactForm.jsx","components/contactList/contactItem/ContactItem.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["addToContacts","createAction","removeFromContacts","updateFilter","contactItemsReducer","createReducer","store","payload","push","idx","findIndex","id","splice","contactFilterReducer","persistConfig","key","storage","rootReducer","combineReducers","items","filter","persistedReducer","persistReducer","configureStore","reducer","contacts","persistor","persistStore","InputField","props","data","className","label","htmlFor","list","name","type","pattern","title","required","ContactForm","onSubmit","useState","setName","number","setNumber","e","preventDefault","generate","value","onChange","target","ContactItem","onDelete","contactsList","map","onClick","ContactList","Filter","App","contactsItems","useSelector","filterString","dispatch","useDispatch","newContact","findDoubleContact","find","contact","alert","action","console","log","item","toLowerCase","includes","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.49d19328.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addToContacts = createAction(\"contacts/add\");\r\nexport const removeFromContacts = createAction(\"contacts/remove\");\r\nexport const updateFilter = createAction(\"filter/update\")","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {addToContacts, removeFromContacts, updateFilter} from './contacts-actions'\r\n\r\nexport const contactItemsReducer = createReducer([], {\r\n    [addToContacts]: (store, {payload})=> {\r\n        store.push(payload);\r\n    },\r\n    [removeFromContacts]: (store, {payload})=> {\r\n        const idx = store.findIndex(({id}) => id === payload);\r\n        store.splice(idx, 1);\r\n    }\r\n});\r\n\r\nexport const contactFilterReducer = createReducer('', {\r\n    [updateFilter]: (store, {payload})=> {\r\n        return payload\r\n    }\r\n})","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport {contactItemsReducer, contactFilterReducer} from \"./contacts/contacts-reducers\"\r\n\r\nconst persistConfig = {\r\n    key: \"store\",\r\n    storage\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n        items: contactItemsReducer,\r\n        filter: contactFilterReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport default persistedReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport persistedReducer from \"./rootReducer\";\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistedReducer\r\n    },\r\n});\r\n\r\nexport const persistor = persistStore(store);","import PropTypes from 'prop-types'\r\n\r\nconst InputField = (props) => {\r\n    const data = { ...props};\r\n    return (\r\n        <div className=\"mb-3\">\r\n            {data.label && <label htmlFor={data.id} className=\"form-label\">{data.label }</label>}\r\n            <input {...data}  />\r\n        </div>        \r\n    )\r\n};\r\n\r\nexport default InputField;\r\n\r\nInputField.propTypes = {\r\n    props: PropTypes.object,\r\n  }","export const list = {\r\n    name: {\r\n      name: \"name\",\r\n      type: \"text\",\r\n      className:\"form-control\",\r\n      id:\"inputName\",\r\n      // ariaDescribedby:\"nameHelp\",\r\n      pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n      title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n      required: true,\r\n      label: \"Name\",\r\n    },\r\n    number: {\r\n      name: \"number\",\r\n      type: \"tel\",\r\n      className:\"form-control\",\r\n      id: \"inputTelephone\",\r\n      // pattern: \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\r\n      title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n      required: true,\r\n      label: \"Number\"\r\n    },\r\n  };","import { useState } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputField from \"../inputField/InputField\";\r\nimport { list } from \"../../fields/fields\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleChangeName = ({ target }) => {\r\n       setName(target.value)\r\n  };\r\n\r\n  const handleChangeNumber = ({ target }) => {\r\n      setNumber(target.value)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = generate();\r\n    const newContact = { id, name, number };\r\n    onSubmit(newContact);\r\n    setName('')\r\n    setNumber('')\r\n\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"form-control mb-3\">\r\n        <InputField {...list.name} value={name} onChange={handleChangeName} />\r\n        <InputField {...list.number} value={number} onChange={handleChangeNumber} />\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types'\r\n\r\nconst ContactItem = ({ data = [], onDelete }) => {\r\n  const contactsList = data.map(({ name, id, number }) => (\r\n        <li\r\n          key={id}\r\n          className=\"list-group-item d-flex justify-content-between align-items-start \"\r\n        >\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary align-items-end btn-sm\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n  ));\r\n  return <>{contactsList}</>;\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n","import ContactItem from \"./contactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ data, onDelete }) => {\r\n  return (\r\n    <>\r\n      <h1>Contacts</h1>\r\n      <ul className=\"list-group d-grid gap-2 d-md-flex justify-content-center\">\r\n        <ContactItem data={data} onDelete={onDelete} />\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <>\r\n      <h2>Find contacts by name:</h2>\r\n      <div className=\"form-control col-md-6\">\r\n        <input\r\n          className=\"form-control col-md-3\"\r\n          onChange={onChange}\r\n          name=\"filter\"\r\n          value={filter}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n}","import { useSelector, useDispatch } from \"react-redux\";\n\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nimport { addToContacts, removeFromContacts,updateFilter } from \"./redux/contacts/contacts-actions\";\nimport \"./App.css\";\n\nconst App = () => {\n  const contactsItems = useSelector((store) => store.contacts.items);\n  const filterString = useSelector((store) => store.contacts.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = () => {\n    const filteredContacts = contactsItems.filter((item) =>\n      item.name.toLowerCase().includes(filterString.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const handleChange = ({ target }) => {\n    const { value} = target;\n    dispatch(updateFilter(value))\n  };\n\n  const handleSubmit = (newContact) => {\n    const findDoubleContact = contactsItems.find(\n      (contact) => contact.name === newContact.name\n    );\n    if (findDoubleContact) {\n      alert(`${findDoubleContact.name} is already in contacts`);\n    } else {\n      const action = addToContacts(newContact);\n      console.log(action)\n      dispatch(action);\n    }\n  };\n\n  const handleDelete = (id) => {\n    dispatch(removeFromContacts(id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n      <Filter onChange={handleChange} data={contactsItems} filter={filterString} />\n      <ContactList data={handleFilter()} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store, persistor} from \"./redux/store\";\n\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n       <App />\n       </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}